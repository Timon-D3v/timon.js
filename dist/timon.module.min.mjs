/*!
 * timon.js
 * Copyright(c) 2024 Timon Fiedler
 * MIT Licensed
 */
"use strict";const DEBUG=false;function toBase64(file){return new Promise(((resolve,reject)=>{const reader=new FileReader;reader.onload=()=>resolve(reader.result);reader.onerror=reject;reader.readAsDataURL(file)}))}function toBase64Max(file,bytes,scale=.8){return new Promise(((resolve,reject)=>{const reader=new FileReader;reader.onload=()=>{const img=new Image;img.src=reader.result;img.onload=()=>{const scaleFactor=Math.min(1,bytes/file.size);const width=img.width*scaleFactor;const height=img.height*scaleFactor;const canvas=document.createElement("canvas");const ctx=canvas.getContext("2d");canvas.width=width;canvas.height=height;ctx.drawImage(img,0,0,width,height);const resizedImage=canvas.toDataURL("image/jpeg",scale);resolve(resizedImage)}};reader.onerror=reject;reader.readAsDataURL(file)}))}function toDateString(date){const monthNames=["Januar","Februar","MÃ¤rz","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"];const day=date.getDate();const month=monthNames[date.getMonth()];const year=date.getFullYear();const time=date.toLocaleTimeString();return`${day}. ${month} ${year} um ${time}`}function getElm(id,caller=document){const element=caller.getElementById(id);const settingError=name=>{if(DEBUG)console.log(`The function "${name}" is already declared for this element. The replaced function is named "_${name}".`)};if(element===null){console.warn(`The element with id ${id} does not exist!`);const errorFunction=()=>{console.error(`The element with id ${id} does not exist!`)};return{on:errorFunction,click:errorFunction,css:errorFunction,show:errorFunction,getQuery:errorFunction,getElm:errorFunction}}const on=(event,callback)=>{element.addEventListener(event,callback)};try{element.on=on}catch(error){settingError("on");element._on=on}const native_click=element.click.bind(element);const click=callback=>{if(typeof callback==="function"){element.addEventListener("click",callback)}else{native_click()}};try{element.click=click}catch(error){settingError("click");element._click=click}const css=styles=>{const cssString=Object.entries(styles).map((([property,value])=>`${property}: ${value}`)).join("; ");element.style.cssText=cssString};try{element.css=css}catch(error){settingError("css");element._css=css}const hide=()=>{element.style.display="none"};try{element.hide=hide}catch(error){settingError("hide");element._hide=hide}const show=(type="block")=>{element.style.display=type};try{element.show=show}catch(error){settingError("show");element._show=show}const flex=()=>{element.style.display="flex"};try{element.flex=flex}catch(error){settingError("flex");element._flex=flex}const grid=()=>{element.style.display="grid"};try{element.grid=grid}catch(error){settingError("grid");element._grid=grid}const rotate=degrees=>{element.style.transform+=`rotate(${degrees}deg)`};try{element.rotate=rotate}catch(error){settingError("rotate");element._rotate=rotate}const text=text=>{if(typeof text==="undefined"){return element.innerText}else{element.innerText=text.toString()}};try{if(element.text||typeof element.text!=="undefined")throw new Error;element.text=text}catch(error){settingError("text");element._text=text}const html=html=>{if(typeof html==="undefined"){return element.innerHTML}else{element.innerHTML=html.toString()}};try{element.html=html}catch(error){settingError("html");element._html=html}const val=value=>{if(typeof value==="undefined"){return element.value}else{element.value=value}};try{element.val=val}catch(error){settingError("val");element._val=val}const timon_class=className=>{if(typeof className==="undefined"){return Array.from(element.classList).join(" ")}else if(element.classList.contains(className)){element.classList.remove(className)}else{element.classList.add(className)}};try{if(element.class||typeof element.class!=="undefined")throw new Error;element.class=timon_class}catch(error){settingError("class");element._class=timon_class}const addClass=(...classList)=>{classList.forEach((name=>{element.classList.add(name)}))};try{element.addClass=addClass}catch(error){settingError("addClass");element._addClass=addClass}const removeClass=(...classList)=>{classList.forEach((name=>{element.classList.remove(name)}))};try{element.removeClass=removeClass}catch(error){settingError("removeClass");element._removeClass=removeClass}const off=(event,callback)=>{element.removeEventListener(event,callback)};try{element.off=off}catch(error){settingError("off");element._off=off}const replaceClass=(replaceClass,setClass)=>{const removeClasses=Array.isArray(replaceClass)?replaceClass:[replaceClass];const addClasses=Array.isArray(setClass)?setClass:[setClass];element.classList.remove(...removeClasses);element.classList.add(...addClasses)};try{element.replaceClass=replaceClass}catch(error){settingError("replaceClass");element._replaceClass=replaceClass}const toggleClass=(...classNames)=>{classNames.forEach((className=>{element.classList.toggle(className)}))};try{element.toggleClass=toggleClass}catch(error){settingError("toggleClass");element._toggleClass=toggleClass}const data=(dataName,value)=>{if(typeof dataName==="undefined"){const dataObject={};for(const attr of element.attributes){if(attr.name.startsWith("data")){dataObject[attr.name]=attr.value}}return dataObject}else if(typeof dataName==="string"&&typeof value==="undefined"){return element.getAttribute(dataName)}else if(typeof dataName==="string"&&typeof value==="string"){element.setAttribute(dataName,value)}};try{if(element.data||typeof element.data!=="undefined")throw new Error;element.data=data}catch(error){settingError("data");element._data=data}const toggleText=(text1,text2)=>{if(element.innerText===text1){element.innerText=text2}else{element.innerText=text1}};try{element.toggleText=toggleText}catch(error){settingError("toggleText");element._toggleText=toggleText}const toggleHTML=(html1,html2)=>{if(element.innerHTML===html1){element.innerHTML=html2}else{element.innerHTML=html1}};try{element.toggleHTML=toggleHTML}catch(error){settingError("toggleHTML");element._toggleHTML=toggleHTML}const hasClass=className=>element.classList.contains(className);try{element.hasClass=hasClass}catch(error){settingError("hasClass");element._hasClass=hasClass}const extra=(name,value)=>{element[name]=value};try{element.extra=extra}catch(error){settingError("extra");element._extra=extra}const attribute=(type,value)=>{if(typeof type==="undefined"){const attributes={};for(const attr of element.attributes){attributes[attr.name]=attr.value}return attributes}else if(typeof type==="string"&&typeof value==="undefined"){element.getAttribute(type)}else if(typeof type==="string"&&typeof value==="string"){element.setAttribute(type,value)}};try{if(element.attribute||typeof element.attribute!=="undefined")throw new Error;element.attribute=attribute}catch(error){settingError("attribute");element._attribute=attribute}try{if(element.attr||typeof element.attr!=="undefined")throw new Error;element.attr=attribute}catch(error){if(DEBUG)console.warn("Shorthand attr is not available. Use the function 'attribute' instead.")}const parent=()=>{const parent=element.parentElement;if(typeof parent.id==="string"){return getElm(parent.id)}else{const id=randomString(128);parent.id=id;const parentElement=getElm(id);parentElement.removeAttribute("id");return parentElement}};try{element.parent=parent}catch(error){settingError("parent");element._parent=parent}const childrenClick=callback=>{Array.from(element.children).forEach((child=>{if(typeof callback==="function"){element.addEventListener("click",callback)}else{native_click()}}))};try{element.childrenClick=childrenClick}catch(error){settingError("childrenClick");element._childrenClick=childrenClick}const childrenOn=(event,callback)=>{Array.from(element.children).forEach((child=>{child.addEventListener(event,callback)}))};try{element.childrenOn=childrenOn}catch(error){settingError("childrenOn");element._childrenOn=childrenOn}const childrenOff=(event,callback)=>{Array.from(element.children).forEach((child=>{child.removeEventListener(event,callback)}))};try{element.childrenOff=childrenOff}catch(error){settingError("childrenOff");element._childrenOff=childrenOff}const hasChild=child=>{for(let i=0;i<element.children.length;i++){if(child===element.children[i])return true}return false};try{element.hasChild=hasChild}catch(error){settingError("hasChild");element._hasChild=hasChild}const hasChildWithId=id=>{const child=document.getElementById(id);for(let i=0;i<element.children.length;i++){if(child===element.children[i])return true}return false};try{element.hasChildWithId=hasChildWithId}catch(error){settingError("hasChildWithId");element._hasChildWithId=hasChildWithId}const x=()=>element.offsetWidth;try{if(element.x||typeof element.x!=="undefined")throw new Error;element.x=x}catch(error){settingError("x");element._x=x}const y=()=>element.offsetHeight;try{if(element.y||typeof element.y!=="undefined")throw new Error;element.y=y}catch(error){settingError("y");element._y=y}const xy=()=>({x:element.offsetWidth,y:element.offsetHeight});try{element.xy=xy}catch(error){settingError("xy");element._xy=xy}const xString=()=>element.offsetWidth.toString();try{element.xString=xString}catch(error){settingError("xString");element._xString=xString}const yString=()=>element.offsetHeight.toString();try{element.yString=yString}catch(error){settingError("yString");element._yString=yString}const xyString=()=>({x:element.offsetWidth.toString(),y:element.offsetHeight.toString()});try{element.xyString=xyString}catch(error){settingError("xyString");element._xyString=xyString}element.getQuery=query=>getQuery(query,element);element.getElm=id=>getElm(id,element);const customId=id=>{element.uuid=id};try{element.customId=customId}catch(error){settingError("customId");element._customId=customId}const append=(...nodes)=>{nodes.forEach((node=>{element.appendChild(node)}))};try{element.append=append}catch(error){settingError("append");element._append=append}const childrenCount=()=>element.children.length;try{element.childrenCount=childrenCount}catch(error){settingError("childrenCount");element._childrenCount=childrenCount}const file=()=>{try{return element.files[0]}catch(err){console.error("This element does not contain any files.");return undefined}};try{element.file=file}catch(error){settingError("file");element._file=file}const changeType=type=>{const newElement=document.createElement(type);newElement.innerHTML=element.innerHTML;Array.from(element.attributes).forEach((attr=>{newElement.setAttribute(attr.name,attr.value)}));element.parentNode.replaceChild(newElement,element)};try{element.changeType=changeType}catch(error){settingError("changeType");element._changeType=changeType}const valIsEmpty=()=>{const value=element.value;if(value===undefined||value===null||value===""||typeof value==="undefined"){return true}else if(Array.isArray(value)&&value?.length===0){return true}else if(typeof value==="object"&&Object.keys(value)?.length===0){return true}else{return false}};try{element.valIsEmpty=valIsEmpty}catch(error){settingError("valIsEmpty");element._valIsEmpty=valIsEmpty}const textIsEmpty=()=>{const text=element.innerText;if(text===undefined||text===null||text===""||typeof text==="undefined"){return true}else if(Array.isArray(text)&&text?.length===0){return true}else if(typeof text==="object"&&Object.keys(text)?.length===0){return true}else{return false}};try{element.textIsEmpty=textIsEmpty}catch(error){settingError("textIsEmpty");element._textIsEmpty=textIsEmpty}const htmlIsEmpty=()=>{const html=element.innerHTML;if(html===undefined||html===null||html===""||typeof html==="undefined"){return true}else if(Array.isArray(html)&&html?.length===0){return true}else if(typeof html==="object"&&Object.keys(html)?.length===0){return true}else{return false}};try{element.htmlIsEmpty=htmlIsEmpty}catch(error){settingError("htmlIsEmpty");element._htmlIsEmpty=htmlIsEmpty}const addAfter=node=>{element.insertAdjacentElement(node)};try{element.addAfter=addAfter}catch(error){settingError("addAfter");element._addAfter=addAfter}const addBefore=node=>{element.parentElement.insertBefore(node,element)};try{element.addBefore=addBefore}catch(error){settingError("addBefore");element._addBefore=addBefore}const getImg=()=>{if(element.tagName!=="IMG"&&element.tagName!=="CANVAS"&&!(element.tagName==="INPUT"&&element.type==="file")){throw new Error("This element does not contain an image.")}const image=new Image;if(element.tagName==="IMG"){image.src=element.src}else if(element.tagName==="INPUT"){const file=element.files[0];if(file){const reader=new FileReader;reader.onload=event=>{image.src=event.target.result};reader.readAsDataURL(file)}}else if(element.tagName==="CANVAS"){const context=element.getContext("2d");image.onload=()=>{context.drawImage(image,0,0)};image.src="image.jpg"}return image};try{element.getImg=getImg}catch(error){settingError("getImg");element._getImg=getImg}const getImgBase64=()=>{if(element.tagName!=="IMG"&&element.tagName!=="CANVAS"&&!(element.tagName==="INPUT"&&element.type==="file")){throw new Error("This element does not contain an image.")}if(element.tagName==="IMG"){const image=new Image;image.src=element.src;return new Promise(((resolve,reject)=>{image.onload=()=>{const canvas=document.createElement("canvas");const context=canvas.getContext("2d");canvas.width=image.width;canvas.height=image.height;context.drawImage(image,0,0,image.width,image.height);resolve(canvas.toDataURL("image/png"))};image.onerror=()=>{reject(new Error("Failed to load image."))}}))}else if(element.tagName==="INPUT"){const file=element.files[0];if(file){return new Promise(((resolve,reject)=>{const reader=new FileReader;reader.onload=event=>{resolve(event.target.result)};reader.onerror=()=>{reject(new Error("Failed to read file."))};reader.readAsDataURL(file)}))}}else if(element.tagName==="CANVAS"){return Promise.resolve(element.toDataURL("image/png"))}};try{element.getImgBase64=getImgBase64}catch(error){settingError("getImgBase64");element._getImgBase64=getImgBase64}const fullscreen=()=>{if(element.requestFullscreen){element.requestFullscreen()}else if(element.mozRequestFullScreen){element.mozRequestFullScreen()}else if(element.webkitRequestFullscreen){element.webkitRequestFullscreen()}else if(element.msRequestFullscreen){element.msRequestFullscreen()}};try{element.fullscreen=fullscreen}catch(error){settingError("fullscreen");element._fullscreen=fullscreen}try{element.uuid=randomString(32)}catch(error){console.warn('The value "uuid" is already declared for this element. The replaced value is named _"uuid".');element._uuid=randomString(32)}return element}function getQuery(query,caller=document){const elements=caller.querySelectorAll(query);const settingError=name=>{if(DEBUG)console.log(`The function "${name}" is already declared for this element. The replaced function is named "_${name}".`)};if(elements===null){console.warn(`The element with query ${query} does not exist!`);const errorFunction=()=>{console.error(`The element with query ${query} does not exist!`)};return{on:errorFunction,click:errorFunction,css:errorFunction,show:errorFunction,getQuery:errorFunction,getElm:errorFunction}}const on=(event,callback)=>{elements.forEach((elm=>elm.addEventListener(event,callback)))};try{elements.on=on}catch(error){settingError("on");elements._on=on}const native_click=elements.click.bind(elements);const click=callback=>{if(typeof callback==="function"){elements.addEventListener("click",callback)}else{native_click()}};try{elements.click=click}catch(error){settingError("click");elements._css=click}const css=styles=>{const cssString=Object.entries(styles).map((([property,value])=>`${property}: ${value}`)).join("; ");elements.forEach((elm=>elm.style.cssText=cssString))};try{elements.css=css}catch(error){settingError("css");elements._css=css}const hide=()=>{elements.forEach((element=>{element.style.display="none"}))};try{elements.hide=hide}catch(error){settingError("hide");elements._hide=hide}const show=(type="block")=>{elements.forEach((element=>{element.style.display=type}))};try{elements.show=show}catch(error){settingError("show");elements._show=show}const flex=()=>{elements.forEach((element=>{element.style.display="flex"}))};try{elements.flex=flex}catch(error){settingError("flex");elements._flex=flex}const grid=()=>{elements.forEach((element=>{element.style.display="grid"}))};try{elements.grid=grid}catch(error){settingError("grid");elements._grid=grid}const rotate=degrees=>{elements.forEach((element=>{element.style.transform+=`rotate(${degrees}deg)`}))};try{elements.rotate=rotate}catch(error){settingError("rotate");elements._rotate=rotate}const timon_class=className=>{let classArray=[];elements.forEach((element=>{if(typeof className==="undefined"){classArray.push(Array.from(element.classList).join(" "))}else if(element.classList.contains(className)){element.classList.remove(className)}else{element.classList.add(className)}}));return classArray};try{if(elements.class||typeof elements.class!=="undefined")throw new Error;elements.class=timon_class}catch(error){settingError("class");elements._class=timon_class}const addClass=(...classList)=>{classList.forEach((name=>{elements.forEach((element=>{element.classList.add(name)}))}))};try{elements.addClass=addClass}catch(error){settingError("addClass");elements._addClass=addClass}const removeClass=(...classList)=>{elements.forEach((element=>{classList.forEach((name=>{element.classList.remove(name)}))}))};try{elements.removeClass=removeClass}catch(error){settingError("removeClass");elements._removeClass=removeClass}const off=(event,callback)=>{elements.forEach((element=>{element.removeEventListener(event,callback)}))};try{elements.off=off}catch(error){settingError("off");elements._off=off}const replaceClass=(replaceClass,setClass)=>{elements.forEach((element=>{const removeClasses=Array.isArray(replaceClass)?replaceClass:[replaceClass];const addClasses=Array.isArray(setClass)?setClass:[setClass];element.classList.remove(...removeClasses);element.classList.add(...addClasses)}))};try{elements.replaceClass=replaceClass}catch(error){settingError("replaceClass");elements._replaceClass=replaceClass}const toggleClass=(...classNames)=>{elements.forEach((element=>{classNames.forEach((className=>{element.classList.toggle(className)}))}))};try{elements.toggleClass=toggleClass}catch(error){settingError("toggleClass");elements._toggleClass=toggleClass}const extra=(name,value)=>{elements[name]=value};try{elements.extra=extra}catch(error){settingError("extra");elements._extra=extra}const childrenClick=callback=>{elements.forEach((element=>{Array.from(element.children).forEach((child=>{if(typeof callback==="function"){element.addEventListener("click",callback)}else{native_click()}}))}))};try{elements.childrenClick=childrenClick}catch(error){settingError("childrenClick");elements._childrenClick=childrenClick}const childrenOn=(event,callback)=>{elements.forEach((element=>{Array.from(element.children).forEach((child=>{child.addEventListener(event,callback)}))}))};try{elements.childrenOn=childrenOn}catch(error){settingError("childrenOn");elements._childrenOn=childrenOn}const childrenOff=(event,callback)=>{elements.forEach((element=>{Array.from(element.children).forEach((child=>{child.removeEventListener(event,callback)}))}))};try{elements.childrenOff=childrenOff}catch(error){settingError("childrenOff");elements._childrenOff=childrenOff}const append=(...nodes)=>{elements.forEach((element=>{nodes.forEach((node=>{element.appendChild(node)}))}))};try{elements.append=append}catch(error){settingError("append");elements._append=append}const changeType=type=>{elements.forEach((element=>{const newElement=document.createElement(type);newElement.innerHTML=element.innerHTML;Array.from(element.attributes).forEach((attr=>{newElement.setAttribute(attr.name,attr.value)}));element.parentNode.replaceChild(newElement,element)}))};try{elements.changeType=changeType}catch(error){settingError("changeType");elements._changeType=changeType}const addAfter=node=>{elements.forEach((element=>{element.insertAdjacentElement(node)}))};try{elements.addAfter=addAfter}catch(error){settingError("addAfter");elements._addAfter=addAfter}const addBefore=node=>{elements.forEach((element=>{element.parentElement.insertBefore(node,element)}))};try{elements.addBefore=addBefore}catch(error){settingError("addBefore");elements._addBefore=addBefore}const get=number=>elements[number];try{elements.get=get}catch(error){settingError("get");elements._get=get}try{elements.uuid=randomString(32)}catch(error){console.warn('The value "uuid" is already declared for this element. The replaced value is named _"uuid".');elements._uuid=randomString(32)}elements.forEach((element=>{const on=(event,callback)=>{element.addEventListener(event,callback)};try{element.on=on}catch(error){settingError("on");element._on=on}const native_click=element.click.bind(element);const click=callback=>{if(typeof callback==="function"){element.addEventListener("click",callback)}else{native_click()}};try{element.click=click}catch(error){settingError("click");element._css=click}const css=styles=>{const cssString=Object.entries(styles).map((([property,value])=>`${property}: ${value}`)).join("; ");element.style.cssText=cssString};try{element.css=css}catch(error){settingError("css");element._css=css}const hide=()=>{element.style.display="none"};try{element.hide=hide}catch(error){settingError("hide");element._hide=hide}const show=(type="block")=>{element.style.display=type};try{element.show=show}catch(error){settingError("show");element._show=show}const flex=()=>{element.style.display="flex"};try{element.flex=flex}catch(error){settingError("flex");element._flex=flex}const grid=()=>{element.style.display="grid"};try{element.grid=grid}catch(error){settingError("grid");element._grid=grid}const rotate=degrees=>{element.style.transform+=`rotate(${degrees}deg)`};try{element.rotate=rotate}catch(error){settingError("rotate");element._rotate=rotate}const text=text=>{if(typeof text==="undefined"){return element.innerText}else{element.innerText=text.toString()}};try{if(element.text||typeof element.text!=="undefined")throw new Error;element.text=text}catch(error){settingError("text");element._text=text}const html=html=>{if(typeof html==="undefined"){return element.innerHTML}else{element.innerHTML=html.toString()}};try{element.html=html}catch(error){settingError("html");element._html=html}const val=value=>{if(typeof value==="undefined"){return element.value}else{element.value=value}};try{element.val=val}catch(error){settingError("val");element._val=val}const timon_class=className=>{if(typeof className==="undefined"){return Array.from(element.classList).join(" ")}else if(element.classList.contains(className)){element.classList.remove(className)}else{element.classList.add(className)}};try{if(element.class||typeof element.class!=="undefined")throw new Error;element.class=timon_class}catch(error){settingError("class");element._class=timon_class}const addClass=(...classList)=>{classList.forEach((name=>{element.classList.add(name)}))};try{element.addClass=addClass}catch(error){settingError("addClass");element._addClass=addClass}const removeClass=(...classList)=>{classList.forEach((name=>{element.classList.remove(name)}))};try{element.removeClass=removeClass}catch(error){settingError("removeClass");element._removeClass=removeClass}const off=(event,callback)=>{element.removeEventListener(event,callback)};try{element.off=off}catch(error){settingError("off");element._off=off}const replaceClass=(replaceClass,setClass)=>{const removeClasses=Array.isArray(replaceClass)?replaceClass:[replaceClass];const addClasses=Array.isArray(setClass)?setClass:[setClass];element.classList.remove(...removeClasses);element.classList.add(...addClasses)};try{element.replaceClass=replaceClass}catch(error){settingError("replaceClass");element._replaceClass=replaceClass}const toggleClass=(...classNames)=>{classNames.forEach((className=>{element.classList.toggle(className)}))};try{element.toggleClass=toggleClass}catch(error){settingError("toggleClass");element._toggleClass=toggleClass}const data=(dataName,value)=>{if(typeof dataName==="undefined"){const dataObject={};for(const attr of element.attributes){if(attr.name.startsWith("data")){dataObject[attr.name]=attr.value}}return dataObject}else if(typeof dataName==="string"&&typeof value==="undefined"){return element.getAttribute(dataName)}else if(typeof dataName==="string"&&typeof value==="string"){element.setAttribute(dataName,value)}};try{if(element.data||typeof element.data!=="undefined")throw new Error;element.data=data}catch(error){settingError("data");element._data=data}const toggleText=(text1,text2)=>{if(element.innerText===text1){element.innerText=text2}else{element.innerText=text1}};try{element.toggleText=toggleText}catch(error){settingError("toggleText");element._toggleText=toggleText}const toggleHTML=(html1,html2)=>{if(element.innerHTML===html1){element.innerHTML=html2}else{element.innerHTML=html1}};try{element.toggleHTML=toggleHTML}catch(error){settingError("toggleHTML");element._toggleHTML=toggleHTML}const hasClass=className=>element.classList.contains(className);try{element.hasClass=hasClass}catch(error){settingError("hasClass");element._hasClass=hasClass}const extra=(name,value)=>{element[name]=value};try{element.extra=extra}catch(error){settingError("extra");element._extra=extra}const attribute=(type,value)=>{if(typeof type==="undefined"){const attributes={};for(const attr of element.attributes){attributes[attr.name]=attr.value}return attributes}else if(typeof type==="string"&&typeof value==="undefined"){element.getAttribute(type)}else if(typeof type==="string"&&typeof value==="string"){element.setAttribute(type,value)}};try{if(element.attribute||typeof element.attribute!=="undefined")throw new Error;element.attribute=attribute}catch(error){settingError("attribute");element._attribute=attribute}try{if(element.attr||typeof element.attr!=="undefined")throw new Error;element.attr=attribute}catch(error){if(DEBUG)console.warn("Shorthand attr is not available. Use the function 'attribute' instead.")}const parent=()=>{const parent=element.parentElement;if(typeof parent.id==="string"){return getElm(parent.id)}else{const id=randomString(128);parent.id=id;const parentElement=getElm(id);parentElement.removeAttribute("id");return parentElement}};try{element.parent=parent}catch(error){settingError("parent");element._parent=parent}const childrenClick=callback=>{Array.from(element.children).forEach((child=>{child.addEventListener("click",callback)}))};try{element.childrenClick=childrenClick}catch(error){settingError("childrenClick");element._childrenClick=childrenClick}const childrenOn=(event,callback)=>{Array.from(element.children).forEach((child=>{child.addEventListener(event,callback)}))};try{element.childrenOn=childrenOn}catch(error){settingError("childrenOn");element._childrenOn=childrenOn}const childrenOff=(event,callback)=>{Array.from(element.children).forEach((child=>{child.removeEventListener(event,callback)}))};try{element.childrenOff=childrenOff}catch(error){settingError("childrenOff");element._childrenOff=childrenOff}const hasChild=child=>{for(let i=0;i<element.children.length;i++){if(child===element.children[i])return true}return false};try{element.hasChild=hasChild}catch(error){settingError("hasChild");element._hasChild=hasChild}const hasChildWithId=id=>{const child=document.getElementById(id);for(let i=0;i<element.children.length;i++){if(child===element.children[i])return true}return false};try{element.hasChildWithId=hasChildWithId}catch(error){settingError("hasChildWithId");element._hasChildWithId=hasChildWithId}const x=()=>element.offsetWidth;try{if(element.x||typeof element.x!=="undefined")throw new Error;element.x=x}catch(error){settingError("x");element._x=x}const y=()=>element.offsetHeight;try{if(element.y||typeof element.y!=="undefined")throw new Error;element.y=y}catch(error){settingError("y");element._y=y}const xy=()=>({x:element.offsetWidth,y:element.offsetHeight});try{element.xy=xy}catch(error){settingError("xy");element._xy=xy}const xString=()=>element.offsetWidth.toString();try{element.xString=xString}catch(error){settingError("xString");element._xString=xString}const yString=()=>element.offsetHeight.toString();try{element.yString=yString}catch(error){settingError("yString");element._yString=yString}const xyString=()=>({x:element.offsetWidth.toString(),y:element.offsetHeight.toString()});try{element.xyString=xyString}catch(error){settingError("xyString");element._xyString=xyString}element.getQuery=query=>getQuery(query,element);element.getElm=id=>getElm(id,element);const customId=id=>{element.uuid=id};try{element.customId=customId}catch(error){settingError("customId");element._customId=customId}const append=(...nodes)=>{nodes.forEach((node=>{element.appendChild(node)}))};try{element.append=append}catch(error){settingError("append");element._append=append}const childrenCount=()=>element.children.length;try{element.childrenCount=childrenCount}catch(error){settingError("childrenCount");element._childrenCount=childrenCount}const file=()=>{try{return element.files[0]}catch(err){console.error("This element does not contain any files.");return undefined}};try{element.file=file}catch(error){settingError("file");element._file=file}const changeType=type=>{const newElement=document.createElement(type);newElement.innerHTML=element.innerHTML;Array.from(element.attributes).forEach((attr=>{newElement.setAttribute(attr.name,attr.value)}));element.parentNode.replaceChild(newElement,element)};try{element.changeType=changeType}catch(error){settingError("changeType");element._changeType=changeType}const valIsEmpty=()=>{const value=element.value;if(value===undefined||value===null||value===""||typeof value==="undefined"){return true}else if(Array.isArray(value)&&value?.length===0){return true}else if(typeof value==="object"&&Object.keys(value)?.length===0){return true}else{return false}};try{element.valIsEmpty=valIsEmpty}catch(error){settingError("valIsEmpty");element._valIsEmpty=valIsEmpty}const textIsEmpty=()=>{const text=element.innerText;if(text===undefined||text===null||text===""||typeof text==="undefined"){return true}else if(Array.isArray(text)&&text?.length===0){return true}else if(typeof text==="object"&&Object.keys(text)?.length===0){return true}else{return false}};try{element.textIsEmpty=textIsEmpty}catch(error){settingError("textIsEmpty");element._textIsEmpty=textIsEmpty}const htmlIsEmpty=()=>{const html=element.innerHTML;if(html===undefined||html===null||html===""||typeof html==="undefined"){return true}else if(Array.isArray(html)&&html?.length===0){return true}else if(typeof html==="object"&&Object.keys(html)?.length===0){return true}else{return false}};try{element.htmlIsEmpty=htmlIsEmpty}catch(error){settingError("htmlIsEmpty");element._htmlIsEmpty=htmlIsEmpty}const addAfter=node=>{element.insertAdjacentElement(node)};try{element.addAfter=addAfter}catch(error){settingError("addAfter");element._addAfter=addAfter}const addBefore=node=>{element.parentElement.insertBefore(node,element)};try{element.addBefore=addBefore}catch(error){settingError("addBefore");element._addBefore=addBefore}const getImg=()=>{if(element.tagName!=="IMG"&&element.tagName!=="CANVAS"&&!(element.tagName==="INPUT"&&element.type==="file")){throw new Error("This element does not contain an image.")}const image=new Image;if(element.tagName==="IMG"){image.src=element.src}else if(element.tagName==="INPUT"){const file=element.files[0];if(file){const reader=new FileReader;reader.onload=event=>{image.src=event.target.result};reader.readAsDataURL(file)}}else if(element.tagName==="CANVAS"){const context=element.getContext("2d");image.onload=()=>{context.drawImage(image,0,0)};image.src="image.jpg"}return image};try{element.getImg=getImg}catch(error){settingError("getImg");element._getImg=getImg}const getImgBase64=()=>{if(element.tagName!=="IMG"&&element.tagName!=="CANVAS"&&!(element.tagName==="INPUT"&&element.type==="file")){throw new Error("This element does not contain an image.")}if(element.tagName==="IMG"){const image=new Image;image.src=element.src;return new Promise(((resolve,reject)=>{image.onload=()=>{const canvas=document.createElement("canvas");const context=canvas.getContext("2d");canvas.width=image.width;canvas.height=image.height;context.drawImage(image,0,0,image.width,image.height);resolve(canvas.toDataURL("image/png"))};image.onerror=()=>{reject(new Error("Failed to load image."))}}))}else if(element.tagName==="INPUT"){const file=element.files[0];if(file){return new Promise(((resolve,reject)=>{const reader=new FileReader;reader.onload=event=>{resolve(event.target.result)};reader.onerror=()=>{reject(new Error("Failed to read file."))};reader.readAsDataURL(file)}))}}else if(element.tagName==="CANVAS"){return Promise.resolve(element.toDataURL("image/png"))}};try{element.getImgBase64=getImgBase64}catch(error){settingError("getImgBase64");element._getImgBase64=getImgBase64}const fullscreen=()=>{if(element.requestFullscreen){element.requestFullscreen()}else if(element.mozRequestFullScreen){element.mozRequestFullScreen()}else if(element.webkitRequestFullscreen){element.webkitRequestFullscreen()}else if(element.msRequestFullscreen){element.msRequestFullscreen()}};try{element.fullscreen=fullscreen}catch(error){settingError("fullscreen");element._fullscreen=fullscreen}try{element.uuid=randomString(32)}catch(error){console.warn('The value "uuid" is already declared for this element. The replaced value is named _"uuid".');element._uuid=randomString(32)}}));return elements}async function post(url,body){try{const response=await fetch(window.location.origin+url,{method:"POST",headers:{"Content-Type":"application/json"},mode:"cors",cache:"default",redirect:"follow",credentials:"same-origin",referrerPolicy:"no-referrer-when-downgrade",body:JSON.stringify(body)});return await response.json()}catch(error){console.error(error);throw error}}function randomString(length){let result="";const char="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let i=0;i<length;i++){const randomIndex=Math.floor(Math.random()*char.length);result+=char[randomIndex]}return result}function scrollToQuery(query){const element=document.querySelector(query);if(element){element.scrollIntoView({behavior:"smooth",block:"center"})}}function setCss(element,styles){const cssString=Object.entries(styles).map((([property,value])=>`${property}: ${value}`)).join("; ");element.style.cssText=cssString}function getDevice(){const agent=navigator.userAgent;if(/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(agent)){return"tablet"}else if(/Mobile|iP(hone|od)|Android|BlackBerry|IEMobile|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(agent)){return"mobile"}else{return"desktop"}}async function download(url,filename=url){try{const response=await fetch(url);const blob=await response.blob();const downloadUrl=window.URL.createObjectURL(blob);const anchor=document.createElement("a");anchor.href=downloadUrl;anchor.download=filename;document.body.appendChild(anchor);anchor.click();document.body.removeChild(anchor);window.URL.revokeObjectURL(downloadUrl)}catch(error){console.error("Error downloading file:",error);throw new Error("Error downloading file")}}function log(message){console.log(message)}function errorLog(message){console.error(message)}function warnLog(message){console.warn(message)}function on(element,event,callback){element.addEventListener(event,callback)}function onClick(element,callback){element.addEventListener("click",callback)}function errorField(message="Etwas hat nicht geklappt. Versuche es in einigen Sekunden erneut.",time=5e3){const field=document.createElement("p");const img=document.createElement("img");const span=document.createElement("span");const output=document.createElement("span");field.style.cssText=`\n    display: block;\n    position: fixed;\n    bottom: 5vh;\n    left: 50%;\n    transform: translateX(-50%);\n    max-width: 70vw;\n    margin: 0;\n    padding: 20px;\n    background-color: var(--error,: 0xd61c35);\n    opacity: 1;\n    box-sizing: border-box;\n    border-radius: 15px;\n    font-size: 20px;\n    line-height: 1.25;\n    z-index: 1000000;\n  `;img.style.cssText=`\n    height: 1lh;\n    aspect-ratio: 1/1;\n    object-fit: contain;\n    object-position: center;\n    transform: translateY(-10%);\n    margin-right: 0.25em;\n  `;field.classList.add("error");img.alt="Achtung";img.src="https://cdn.jsdelivr.net/npm/timonjs/assets/alert.svg";span.innerText="Ein Fehler ist aufgetreten: ";output.innerText=message;field.append(img,span,output);document.querySelector("body").appendChild(field);setTimeout((()=>{if(typeof gsap==="undefined"){const style=document.createElement("link");style.rel="stylesheet";style.href="https://cdn.jsdelivr.net/npm/timonjs/assets/timonjs.css";document.querySelector("head").appendChild(style);field.style.animation=`timonjs-fadeout ${time}ms ease-in`}else{gsap.to(field,{opacity:0,display:"none",duration:time/1e3,ease:"power2.in"})}setTimeout((()=>field.remove()),time)}),time)}function infoField(message,time=5e3){const field=document.createElement("p");const img=document.createElement("img");const span=document.createElement("span");field.style.cssText=`\n    display: block;\n    position: fixed;\n    bottom: 5vh;\n    left: 50%;\n    transform: translateX(-50%);\n    max-width: 70vw;\n    margin: 0;\n    padding: 20px;\n    background-color: var(--info,: 0x4286bd);\n    opacity: 1;\n    box-sizing: border-box;\n    border-radius: 15px;\n    font-size: 20px;\n    line-height: 1.25;\n    z-index: 1000000;\n  `;img.style.cssText=`\n    height: 1lh;\n    aspect-ratio: 1/1;\n    object-fit: contain;\n    object-position: center;\n    margin-right: 0.25em;\n    transform: translateY(-10%) rotate(180deg);\n  `;field.classList.add("info");img.alt="Info";img.src="https://cdn.jsdelivr.net/npm/timonjs/assets/alert.svg";span.innerText=message;field.append(img,span);document.querySelector("body").appendChild(field);setTimeout((()=>{if(typeof gsap==="undefined"){const style=document.createElement("link");style.rel="stylesheet";style.href="https://cdn.jsdelivr.net/npm/timonjs/assets/timonjs.css";document.querySelector("head").appendChild(style);field.style.animation=`timonjs-fadeout ${time}ms ease-in`}else{gsap.to(field,{opacity:0,display:"none",duration:time/1e3,ease:"power2.in"})}setTimeout((()=>field.remove()),time)}),time)}function successField(message,time=5e3){const field=document.createElement("p");const img=document.createElement("img");const span=document.createElement("span");field.style.cssText=`\n    display: block;\n    position: fixed;\n    bottom: 5vh;\n    left: 50%;\n    transform: translateX(-50%);\n    max-width: 70vw;\n    margin: 0;\n    padding: 20px;\n    background-color: var(--success,: 0x40b959);\n    opacity: 1;\n    box-sizing: border-box;\n    border-radius: 15px;\n    font-size: 20px;\n    line-height: 1.25;\n    z-index: 1000000;\n  `;img.style.cssText=`\n    height: 1lh;\n    aspect-ratio: 1/1;\n    object-fit: contain;\n    object-position: center;\n    margin-right: 0.25em;\n    transform: translateY(-10%) rotate(180deg);\n  `;field.classList.add("success");img.alt="Info";img.src="https://cdn.jsdelivr.net/npm/timonjs/assets/alert.svg";span.innerText=message;field.append(img,span);document.querySelector("body").appendChild(field);setTimeout((()=>{if(typeof gsap==="undefined"){const style=document.createElement("link");style.rel="stylesheet";style.href="https://cdn.jsdelivr.net/npm/timonjs/assets/timonjs.css";document.querySelector("head").appendChild(style);field.style.animation=`timonjs-fadeout ${time}ms ease-in`}else{gsap.to(field,{opacity:0,display:"none",duration:time/1e3,ease:"power2.in"})}setTimeout((()=>field.remove()),time)}),time)}function createElm(type,amount=1){const elements=[];for(let i=0;i<amount;i++){const temp=document.createElement(type);const id=randomString(32);temp.id=id;document.querySelector("head").appendChild(temp);elements.push(getElm(id));document.querySelector("head").removeChild(temp)}return elements.length===1?elements[0]:elements}function elementToJson(element){const json={tagName:element.tagName,attributes:Array.from(element.attributes).map((attr=>({name:attr.name,value:attr.value}))),children:Array.from(element.childNodes).map((child=>{if(child.nodeType===Node.TEXT_NODE){const content=child.textContent.trim();if(content!==""){json.children.push({nodeType:"text",content:child.textContent})}}else if(child.nodeType===Node.ELEMENT_NODE){json.children.push(elementToJson(child))}}))};return json}function jsonToElement(json){if(json.nodeType==="text"){return document.createTextNode(json.content)}const element=document.createElement(json.tagName);json.attributes.forEach((attr=>element.setAttribute(attr.name,attr.value)));json.children.forEach((child=>{element.append(jsonToElement(child))}));return element}function ready(callback){addEventListener("DOMContentLoaded",callback)}const ORIGIN=typeof window!=="undefined"?window.location.origin:undefined;const COLORS={RED:13828096,SALMON:16416882,SCARLET:16720896,BARN_RED:8129026,IMPERIAL_RED:15542585,INDIAN_RED:13458524,CHILI_RED:12720135,FIRE_BRICK:11674146,MAROON:8388608,REDWOOD:10771026,RASPBERRY:13770556,CANDY_APPLE_RED:16713728,FERRARI_RED:16721920,PERSIAN_RED:13251635,US_FLAG:12519984,CARMINE:9830425,BURGUNDY:9241119,CRIMSON_RED:12062474,SANGRIA:6166804,MAHOGANY:4328713,BLUE:6393,YALE_BLUE:937106,PIGEON_BLUE:7505317,SKY_BLUE:9816280,INDEPENDENCE:5067117,AIR_FORCE_BLUE:5868463,BABY_BLUE:9031663,CAROLINA_BLUE:5742802,TURKISH_BLUE:5281700,MAYA_BLUE:7586555,OLYMPIC_BLUE:36556,SAPPHIRE:1004218,DENIM_BLUE:1252922,PRUSSIAN_BLUE:12625,SPACE_BLUE:1845585,JADE_GREEN:43115,ARTICHOKE_GREEN:9410425,FERN_GREEN:5208386,LAUREL_GREEN:11123357,PINE_GREEN:96623,TEA_GREEN:13693120,SACRAMENTO_GREEN:276775,BLOOD_RED:8914952,BRICK_RED:11160132,BRIGHT_RED:15616811,BROWN:10824234,BURNT_UMBER:7218702,BURNT_ORANGE:13391104,BURNT_SIENNA:15299665,BYZANTIUM:7350627,CADMIUM_RED:13773611,CARDINAL_RED:12852794,CERISE:14561635,CHERRY:13763629,CHESTNUT:9782581,CLARET:8459057,CORAL_PINK:16286585,CORDOVAN:8470849,CRIMSON:14423100,DARK_RED:9109504,FALU_RED:8067096,GARNET:10103338,MARSALA:9988200,MULBERRY:7800631,NEON_RED:16724273,OXBLOOD:4850692,PASTEL_RED:16425120,PERSIMMON:15489024,POPPY:14897973,PUCE:11099240,RED_BROWN:10824234,RED_OCHRE:9517105,RED_ORANGE:16729139,RED_PURPLE:9778515,ROSE_RED:12721750,RUBY_RED:14684511,RUSSET:8406555,SUNSET_ORANGE:16408405,TERRA_COTTA:14906206,TUSCAN_RED:8138800,TYRIAN_PURPLE:6488880,VENETIAN_RED:10758660,VERMILLION:14893620,WINE:7483191,AZURE:15794175,BLUE_GRAY:7574451,BRIGHT_BLUE:38655,CADET_BLUE:6266528,COBALT_BLUE:18347,CORNFLOWER_BLUE:6591981,CYAN:65535,DARK_BLUE:139,DENIM:7311279,EGYPTIAN_BLUE:1324196,ELECTRIC_BLUE:8255999,GLAUCOUS:6324918,JADE:41836,INDIGO:4129023,IRIS:6111187,LIGHT_BLUE:11393254,MIDNIGHT_BLUE:1644912,NAVY_BLUE:128,NEON_BLUE:2052607,PASTEL_BLUE:10995687,PERIWINKLE:13421823,POWDER_BLUE:11981026,ROBIN_EGG_BLUE:9887441,ROYAL_BLUE:4286945,SAPPHIRE_BLUE:1004218,SEAFOAM_GREEN:10478271,STEEL_BLUE:4620980,TEAL:32896,TURQUOISE:4251856,ULTRAMARINE:276466,VERDIGRIS:4240813,ZAFFRE:530600,AQUA:65535,AQUAMARINE:8388564,ARMY_GREEN:4541211,BLUE_GREEN:561039,BRIGHT_GREEN:11206400,CADMIUM_GREEN:620905,CELADON:11526575,CHARTREUSE:14679808,CITRINE:14995466,DARK_GREEN:143392,EMERALD_GREEN:5294200,EUCALYPTUS:6260085,FOREST_GREEN:2263842,GRASS_GREEN:8190976,GREEN:32768,HUNTER_GREEN:3497531,JUNGLE_GREEN:2796170,KELLY_GREEN:5028631,LIGHT_GREEN:9498256,LIME_GREEN:3329330,LINCOLN_GREEN:4687736,MALACHITE:776785,MINT_GREEN:10025880,MOSS_GREEN:9083483,NEON_GREEN:1048400,NYANZA:15531996,OLIVE_GREEN:8421376,PASTEL_GREEN:12706241,PEAR:13225023,PERIDOT:11846692,PISTACHIO:9684338,SAGE_GREEN:9083483,SEA_GREEN:3050327,SHAMROCK_GREEN:40544,SPRING_GREEN:65407,VEGAS_GOLD:12891220,VIRIDIAN:4227693};const BREAKPOINTS={MOBILE:{SMALL:260,BIG:575},TABLET:{SMALL:750,BIG:1e3},DESKTOP:{SMALL:1200,BIG:1700}};export default{toBase64:toBase64,toBase64Max:toBase64Max,toDateString:toDateString,getElm:getElm,getQuery:getQuery,getDevice:getDevice,setCss:setCss,on:on,onClick:onClick,log:log,errorLog:errorLog,warnLog:warnLog,randomString:randomString,post:post,download:download,scrollToQuery:scrollToQuery,successField:successField,infoField:infoField,errorField:errorField,createElm:createElm,elementToJson:elementToJson,jsonToElement:jsonToElement,ready:ready,ORIGIN:ORIGIN,COLORS:COLORS,BREAKPOINTS:BREAKPOINTS};export{toBase64,toBase64Max,toDateString,getElm,getQuery,getDevice,setCss,on,onClick,log,errorLog,warnLog,randomString,post,download,scrollToQuery,successField,infoField,errorField,createElm,elementToJson,jsonToElement,ready,ORIGIN,COLORS,BREAKPOINTS};